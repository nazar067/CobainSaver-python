import os
import logging
import traceback

from constants.errors.telegram_errors import CANNOT_BE_FORWARDED, NOT_RIGHTS
from constants.errors.tiktok_api_errors import API_LIMIT

def setup_logging():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∑–∞–ø–∏—Å—å—é –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫ –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞.
    """
    log_file = "serverLogs.txt"
    
    if not os.path.exists(log_file):
        open(log_file, "w").close()

    class ReverseFileHandler(logging.FileHandler):
        def emit(self, record):
            log_message = self.format(record)
            with open(self.baseFilename, "r", encoding="utf-8") as f:
                existing_content = f.read()
            with open(self.baseFilename, "w", encoding="utf-8") as f:
                f.write(log_message + "\n\n" + existing_content)

    handler = ReverseFileHandler(log_file, encoding="utf-8")
    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    handler.setFormatter(formatter)
    
    logger = logging.getLogger()
    logger.setLevel(logging.ERROR)
    logger.addHandler(handler)

def log_error(url: str, error: Exception = None, chat_id: int = None, service: str = None, string_error: str = None):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –æ—à–∏–±–∫—É.
    """
    logger = logging.getLogger()
    location = "Not found"
    correct_error = None
    if error:
        tb_lines = traceback.extract_tb(error.__traceback__)
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—É—Ç–∏ (–∏—Å–∫–ª—é—á–∞–µ–º site-packages, frozen –∏ stdlib)
        user_frame = next(
            (frame for frame in reversed(tb_lines) if "site-packages" not in frame.filename and "<frozen" not in frame.filename),
            tb_lines[-1]
        )
        # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        location = f"{user_frame.filename}:{user_frame.lineno}"
        correct_error = f"‚ùóÔ∏è–û—à–∏–±–∫–∞: {type(error).__name__}: {error}"
    else:
        correct_error = f"‚ùóÔ∏è–û—à–∏–±–∫–∞: {string_error}"

    if NOT_RIGHTS not in str(correct_error) and CANNOT_BE_FORWARDED not in str(correct_error) and API_LIMIT not in str(correct_error):
        log_message = (
            f"üß© –û—à–∏–±–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ: {service or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
            f"üí¨ Chat ID: {chat_id or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
            f"üìå –ú–µ—Å—Ç–æ: {location}\n"
            f"{correct_error}\n"
            f"üåê URL: {url or '‚Äî'}"
        )
        logger.error(log_message)
